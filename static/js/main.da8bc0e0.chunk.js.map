{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","WelcomeScreen.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","state","showDetails","toggleShowDetails","bind","this","setState","event","className","summary","start","dateTime","timeZone","location","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","WarningAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","min","max","numberOfEvents","e","updateEventCount","errorText","mockData","JSON","parse","stringify","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","startsWith","done","navigator","onLine","token","removeQuery","url","extractLocations","setItem","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","Set","WelcomeScreen","showWelcomeScreen","align","class","src","alt","rel","App","currentLocation","warningText","eventCount","mounted","locationEvents","slice","newVal","parseInt","Container","Row","Col","md","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.da8bc0e0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import { Button } from \"react-bootstrap\";\n\nclass Event extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDetails: false,\n    };\n    this.toggleShowDetails = this.toggleShowDetails.bind(this);\n  }\n\n  toggleShowDetails() {\n    this.setState({\n      showDetails: !this.state.showDetails,\n    });\n  }\n\n  render() {\n    let event = this.props.event;\n\n    return (\n      <div className=\"event\">\n        <h2 className=\"event__Overview--name\">{event.summary}</h2>\n        <div>\n          <p className=\"event__Overview--date\">{event.start.dateTime} ({event.start.timeZone})</p>\n          <p className=\"event__Overview--location\">{event.location}</p>\n\n          {this.state.showDetails === true && (\n            <p className=\"event__Details--description\">{event.description}</p>\n          )}\n        </div>\n\n        <button className=\"details-btn\" onClick={this.toggleShowDetails}>\n          {!this.state.showDetails ? 'Show Details' : 'Hide Details'}\n        </button>\n\n      </div>\n    );\n  }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n\n        )}\n        {/* {console.log(this.props.events)} */}\n\n      </ul >\n    );\n  }\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\n// subclasses\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#199EB0';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'orange';\n  }\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\nimport { InfoAlert, ErrorAlert } from './Alert';\n// import PropTypes from 'prop-types';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined,\n    infoText: '',\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ showSuggestions: true });\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        // suggestions,\n        infoText: 'We can not find the city you are looking for. Please try another city.',\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: ''\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n      infoText: ''\n    });\n    this.props.updateEvents(suggestion, 0);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n        <InfoAlert text={this.state.infoText} />\n      </div>\n    );\n  }\n}\n\n// CitySearch.propTypes = {\n//   locations: PropTypes.array.isRequired,\n//   updateEvents: PropTypes.func.isRequired\n// }\n\nexport default CitySearch;","import React, { Component } from \"react\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  // state = {\n  //   numberOfEvents: 12,\n  //   // errorText: '',\n  // }\n\n  // handleNumberChange = (event) => {\n  //   const value = event.target.value;\n  //   // this.props.updateEvents(null, value);\n  //   this.setState({\n  //     numberOfEvents: value,\n  //   });\n  //   this.props.updateEventCount(event.target.value);\n  // };\n\n  render() {\n    // const { numberOfEvents } = this.state;\n    return (\n      <div className=\"events-range\">\n        <h3>Adjust the number of events</h3>\n        <RangeSlider\n          min={1}\n          max={12}\n          className=\"number-on-range\"\n          // // value={numberOfEvents}\n          value={this.props.numberOfEvents}\n          // // value={this.state.numberOfEvents}\n          // // onChange={this.handleNumberChange}\n          // // onChange={(e) => this.handleNumberChange(e)}\n          onChange={(e) => this.props.updateEventCount(e)}\n        />\n        <ErrorAlert text={this.props.errorText} />\n      </div>\n    );\n  }\n}\nexport default NumberOfEvents;","let mockData = [{\n  \"kind\": \"calendar#event\",\n  \"etag\": \"\\\"3181161784712000\\\"\",\n  \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n  \"status\": \"confirmed\",\n  \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n  \"created\": \"2020-05-19T19:17:46.000Z\",\n  \"updated\": \"2020-05-27T12:01:32.356Z\",\n  \"summary\": \"Learn JavaScript\",\n  \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n  \"location\": \"London, UK\",\n  \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n  },\n  \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n  },\n  \"start\": {\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"end\": {\n    \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n  \"originalStartTime\": {\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n  \"sequence\": 0,\n  \"reminders\": {\n    \"useDefault\": true\n  },\n  \"eventType\": \"default\"\n},\n{\n  \"kind\": \"calendar#event\",\n  \"etag\": \"\\\"3181159875584000\\\"\",\n  \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n  \"status\": \"confirmed\",\n  \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n  \"created\": \"2020-05-19T19:14:30.000Z\",\n  \"updated\": \"2020-05-27T11:45:37.792Z\",\n  \"summary\": \"React is Fun\",\n  \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n  \"location\": \"Berlin, Germany\",\n  \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n  },\n  \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n  },\n  \"start\": {\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"end\": {\n    \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n  \"originalStartTime\": {\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n  \"sequence\": 0,\n  \"reminders\": {\n    \"useDefault\": true\n  },\n  \"eventType\": \"default\"\n}]\n\nmockData = JSON.parse(JSON.stringify(mockData));\nexport { mockData };","/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nimport axios from 'axios';\nimport { mockData } from './mock-data';\nimport NProgress from 'nprogress';\n\n//////////\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://cbepxljqfl.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n\n//////////\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    // .catch((error) => error);\n    .catch((error) => error.json());\n\n  return result;\n};\n\n//////////\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  // Returns previously cached data for offline user\n  if (!navigator.onLine) {\n    const data = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return data ? JSON.parse(data).events : [];;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://cbepxljqfl.execute-api.us-west-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\n//////////\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\n//////////\n\nexport const getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://cbepxljqfl.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\n//\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n","import React from \"react\";\nimport './WelcomeScreen.css';\nfunction WelcomeScreen(props) {\n  return props.showWelcomeScreen ?\n    (\n      <div className=\"WelcomeScreen\">\n        <h1>Welcome to the Meet app</h1>\n        <h4>\n          Log in to see upcoming events around the world for\n          full-stack\n          developers\n        </h4>\n        <div className=\"button_cont\" align=\"center\">\n          <div class=\"google-btn\">\n            <div class=\"google-icon-wrapper\">\n              <img\n                class=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                alt=\"Google sign-in\"\n              />\n            </div>\n            <button onClick={() => { props.getAccessToken() }}\n              rel=\"nofollow noopener\"\n              class=\"btn-text\"\n            >\n              <b>Sign in with google</b>\n            </button>\n          </div>\n        </div>\n        <a\n          href=\"https://serinhanw.github.io/meet/privacy.html\"\n          rel=\"nofollow noopener\"\n        >\n          Privacy policy\n        </a>\n      </div>\n    )\n    : null\n}\nexport default WelcomeScreen;","import React, { Component } from 'react';\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport logo from './img/meet-logo-192.png';\n// import Header from \"./Header\";\nimport { InfoAlert, ErrorAlert, WarningAlert } from \"./Alert\";\nimport WelcomeScreen from './WelcomeScreen';\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    currentLocation: 'all',\n    numberOfEvents: 12,\n    errorText: '',\n    infoText: '',\n    warningText: '',\n    showWelcomeScreen: undefined,\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, this.state.numberOfEvents),\n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n\n  // async componentDidMount() {\n  //   this.mounted = true;\n  //   const accessToken = localStorage.getItem('access_token');\n  //   const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n  //   const searchParams = new URLSearchParams(window.location.search);\n  //   const code = searchParams.get(\"code\");\n  //   this.setState({\n  //     showWelcomeScreen: !(\n  //       code ||\n  //       isTokenValid ||\n  //       window.location.hostname === 'localhost'\n  //     )\n  //   });\n  //   if ((code || isTokenValid) && this.mounted) {\n  //     getEvents().then((events) => {\n  //       if (this.mounted) {\n  //         this.setState({\n  //           events: events.slice(0, this.state.numberOfEvents),\n  //           // events,\n  //           locations: extractLocations(events)\n  //         });\n  //       }\n  //     });\n  //   }\n\n\n  //   if (navigator.onLine) {\n  //     console.log('online');\n  //     this.setState({\n  //       warningText: \"\",\n  //     });\n  //   } else {\n  //     console.log('offline');\n  //     this.setState({\n  //       warningText: \"You are currently using the app offline.\",\n  //     });\n  //   }\n  // }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location, eventCount) => {\n    this.mounted = true;\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all' && eventCount === 0) ?\n        events : location !== 'all' && eventCount === 0\n          ? events.filter((event) => event.location === location)\n          : events.slice(0, eventCount);\n      if (this.mounted) {\n        this.setState({\n          events: locationEvents,\n          numberOfEvents: eventCount,\n        });\n      }\n    });\n  }\n\n  // updateNumberOfEvents = async (e) => {\n  //   const newVal = e.target.value ? parseInt(e.target.value) : 32;\n  //   await this.setState({ numberOfEvents: newVal });\n  //   this.updateEvents(this.state.currentLocation, this.state.numberOfEvents);\n  // };\n  updateEventCount = async (e) => {\n    const newVal = e.target.value ? parseInt(e.target.value) : 12;\n\n    if (newVal < 1 || newVal > 12) {\n      await this.setState({\n        errorText: 'Please choose a number between 1 and 12',\n      });\n    } else {\n      await this.setState({\n        errorText: '',\n        numberOfEvents: newVal,\n      });\n      this.updateEvents(this.state.currentLocation, this.state.numberOfEvents);\n    }\n  };\n\n  render() {\n    const { locations, numberOfEvents, events } = this.state;\n    if (this.state.showWelcomeScreen === undefined);\n    return (\n      // <div className=\"App\">\n      //   <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n      //   <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\n      //   <EventList events={this.state.events} />\n      // </div>\n      <div className=\"App\">\n        {/* <Header /> */}\n        {/* <Container className=\"App\"> */}\n        <main>\n          <Container>\n            <header>\n              <Row>\n                {/* <h1 className=\"header-logo\">\n                  <img src={logo} alt=\"Meet Logo\" />\n                </h1> */}\n                <h1>Meet Application</h1>\n              </Row>\n            </header>\n            <Row>\n              <WarningAlert text={this.state.warningText} />\n              <Col className=\"CitySearchWrapper\" md={6}>\n                <CitySearch locations={locations} updateEvents={this.updateEvents} />\n              </Col>\n              <Col className=\"NumberInputWrapper\" md={6}>\n                {/* <NumberOfEvents numberOfEvents={numberOfEvents} updateEvents={this.updateEvents} /> */}\n                <NumberOfEvents\n                  numberOfEvents={numberOfEvents}\n                  updateEventCount={this.updateEventCount}\n                  errorText={this.state.errorText} />\n              </Col>\n            </Row>\n            <Row>\n              <Col md={12}>\n                <EventList events={events} />\n              </Col>\n            </Row>\n          </Container>\n        </main>\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen} getAccessToken={() => { getAccessToken() }} />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\n// import { Row } from 'react-bootstrap';\n// import logo from './img/meet-logo-192.png';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\natatus.config('56f64fe5874e49bdafc88835bc558a85').install();\n// atatus.notify(new Error('Test Atatus Setup'));"],"sourceRoot":""}